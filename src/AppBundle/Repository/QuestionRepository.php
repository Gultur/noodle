<?php

namespace AppBundle\Repository;

/**
 * questionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends \Doctrine\ORM\EntityRepository
{
    public function getUnusedQuestions($idQuestionsInQuiz) {



        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('qs.id')
            ->from('AppBundle:Question','qs')
            ->where($qb->expr()->notIn('qs.id', ':idQuestionsInQuiz'))
            ->setParameter(':idQuestionsInQuiz', $idQuestionsInQuiz);

        return $qb->getQuery()->getResult(\Doctrine\ORM\AbstractQuery::HYDRATE_ARRAY);

    }

    function getIdQuestionsFromQuiz($idQuiz){
        $query = $this->getEntityManager()->createQuery(
            'SELECT q.id FROM AppBundle:Quiz qz JOIN qz.questions q WHERE qz.id = :id'
        )->setParameter('id', $idQuiz);



        $results = $query->getResult();
        return $results;
    }

    function testGetQuestionsInQuiz($idQuiz)
    {


        $query = $this->getEntityManager()->createQuery(
            'SELECT q FROM AppBundle:Quiz qz JOIN qz.questions q WHERE qz.id = :id'
        )->setParameter('id', $idQuiz);
        $results = $query->getResult();

        return $results;
    }


    function testGetQuestionNotInQuiz($idQuiz){


        $query = $this->getEntityManager()->createQuery(
            'SELECT q.id FROM AppBundle:Quiz qz JOIN qz.questions q WHERE qz.id = :id'
        )->setParameter('id', $idQuiz);
        $results = $query->getResult();

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('qs')
            ->from('AppBundle:Question','qs')
            ->where($qb->expr()->notIn('qs.id', ':idQuestionsInQuiz'))
            ->setParameter(':idQuestionsInQuiz', $results);

        return $qb->getQuery()->getResult();
    }


}
